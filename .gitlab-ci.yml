stages:
  - compile_and_test
  - benchmark

compile:
  stage: compile_and_test
  script:
    - echo $CI_COMMIT_SHA && git checkout $CI_COMMIT_SHA
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake ../ -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_TOOLS=ON -DWITH_TESTS=ON -DCMAKE_VERBOSE_MAKEFILE=ON
    - make -j $(nproc)
  tags: 
    - terark
  except:
    refs:
      - stage
      - master

# only stage allow to run unit test
unittest:
  stage: compile_and_test
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake ../ -DCMAKE_BUILD_TYPE=RelWithDebInfo -DWITH_TOOLS=ON -DWITH_TESTS=ON -DCMAKE_VERBOSE_MAKEFILE=ON
    - make -j $(nproc) && make test
  only:
    refs:
      - stage
  tags:
    - terark

# only master branch allow to run benchmark
benchmark:
  stage: benchmark
  script:
    - git submodule update --init --recursive
    - mkdir build && cd build
    - cmake ../ -DWITH_TESTS=OFF -DWITH_ASAN=OFF -DCMAKE_BUILD_TYPE=Release
    - cd ../terark-tools/benchmarks && ./bench_baseline.py $PWD/data 10 20 130 # 20 threads, 10GB per thread, kv size = 130B
  only:
    refs:
      - master
  tags:
    - terark

